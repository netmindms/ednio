/*
 * EdSmartSocket.cpp
 *
 *  Created on: Sep 17, 2014
 *      Author: netmind
 */

#include "EdSmartSocket.h"

namespace edft {
EdSmartSocket::EdSmartSocket()
{
	// TODO Auto-generated constructor stub
	mIsSSL = false;
}

EdSmartSocket::~EdSmartSocket()
{
	// TODO Auto-generated destructor stub
}

int EdSmartSocket::open(bool ssl, bool child, int chfd)
{
	mIsSSL = ssl;
	if(child == false) {
		openSSLClientSock(NULL);
	} else {
		openSSLChildSock(chfd);
	}

	return 0;
}

void EdSmartSocket::OnConnected()
{
	if(mCallback != NULL)
	{
		if(mIsSSL == false) {
			mCallback->IOnNet(this, NETEV_CONNECTED);
		}
		else {
			EdSSLSocket::OnConnected();
		}
	}
}

void EdSmartSocket::OnDisconnected()
{
	if(mCallback != NULL) {
		EdSSLSocket::OnDisconnected();
		mCallback->IOnNet(this, NETEV_DISCONNECTED);
	} else {
		EdSSLSocket::OnDisconnected();
	}
}

void EdSmartSocket::OnRead()
{
	if(mCallback != NULL) {
		if(mIsSSL == false) {
			mCallback->IOnNet(this, NETEV_READ);
		} else {
			EdSSLSocket::OnRead();
		}
	}
}

int EdSmartSocket::sendPacket(void* buf, int len)
{

}

int EdSmartSocket::recvPacket(void* buf, int len)
{
	return recv(buf, len);
}

} // namespace edft
